<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sport Events</title>
</head>
<body>
    <h2>Create Event</h2>
    <form id="eventForm">
        Sport: 
        <select id="sportSelect" required>
            <option value="football">Football</option>
            <option value="basketball">Basketball</option>
            <option value="volleyball">Volleyball</option>
        </select><br>
        Description: <textarea id="eventDescription"></textarea><br>
        Date: <input type="datetime-local" id="eventDate" required><br>
        Location: <input type="text" id="eventLocation" required><br>
        <button type="button" id="createEventButton">Create Event</button>
    </form>

    <h2>Events</h2>
    <ul id="eventList"></ul>

    <script type="module">
        // Import the functions you need from the SDKs you need
        import { initializeApp } from "https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js";
        import { getDatabase, ref, push, onValue } from "https://www.gstatic.com/firebasejs/10.8.0/firebase-database.js";

        // Your web app's Firebase configuration
        const firebaseConfig = {
            apiKey: "AIzaSyBMYEeVOS2KlDWq4t8kO6CjmNDhEEXu3T0",
            authDomain: "test-f9d55.firebaseapp.com",
            databaseURL: "https://test-f9d55-default-rtdb.firebaseio.com",
            projectId: "test-f9d55",
            storageBucket: "test-f9d55.appspot.com",
            messagingSenderId: "1055040824626",
            appId: "1:1055040824626:web:1fe0ef6dfe78837ea0a32b"
        };

        // Initialize Firebase
        const app = initializeApp(firebaseConfig);
        const database = getDatabase(app);

        // Объявление переменной eventsRef в глобальной области видимости
        let eventsRef;

        // Функция для создания события
        function createEvent() {
            const selectedSport = document.getElementById('sportSelect').value;
            const eventDescription = document.getElementById('eventDescription').value;
            const eventDate = document.getElementById('eventDate').value;
            const eventLocation = document.getElementById('eventLocation').value;

            // Добавление события в базу данных
            push(eventsRef, {
                sport: selectedSport,
                eventDescription: eventDescription,
                eventDate: eventDate,
                eventLocation: eventLocation
            });

            // Очистка полей формы
            document.getElementById('eventForm').reset();
        }

        // Слушатель событий для обновления списка событий
        eventsRef = ref(database, 'events');
        onValue(eventsRef, (snapshot) => {
            const eventList = document.getElementById('eventList');
            eventList.innerHTML = '';

            snapshot.forEach((childSnapshot) => {
                const eventData = childSnapshot.val();
                const listItem = document.createElement('li');
                listItem.textContent = `${eventData.sport} - ${eventData.eventDate} - ${eventData.eventLocation}`;
                eventList.appendChild(listItem);
            });
        });

        // Добавляем слушатель события click для кнопки "Create Event"
        document.getElementById('createEventButton').addEventListener('click', createEvent);
    </script>
</body>
</html>




---------------------------------------------------------------------------------------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="auth.css">
    <title>User Authentication</title>
</head>
<body>
    <div class="auth-container">
        <div class="auth-form">
            <h2>Welcome!</h2>
            <div class="tabs">
                <button id="registerTab" onclick="showTab('register')">Register</button>
                <button id="loginTab" onclick="showTab('login')">Login</button>
            </div>
            <form id="registerForm" class="auth-tab">
                <label for="registerEmail">Email:</label>
                <input type="email" id="registerEmail" required>
                <label for="registerPassword">Password:</label>
                <input type="password" id="registerPassword" required>
                <button type="button" onclick="registerUser()">Register</button>
            </form>
            <form id="loginForm" class="auth-tab" style="display: none;">
                <label for="loginEmail">Email:</label>
                <input type="email" id="loginEmail" required>
                <label for="loginPassword">Password:</label>
                <input type="password" id="loginPassword" required>
                <button type="button" onclick="loginUser()">Login</button>
            </form>
        </div>
    </div>

    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js";
        import { getDatabase, ref, push, onValue } from "https://www.gstatic.com/firebasejs/10.8.0/firebase-database.js";
        import { getAuth, createUserWithEmailAndPassword } from "https://www.gstatic.com/firebasejs/10.8.0/firebase-auth.js";

// Your web app's Firebase configuration
const firebaseConfig = {
    apiKey: "AIzaSyBMYEeVOS2KlDWq4t8kO6CjmNDhEEXu3T0",
    authDomain: "test-f9d55.firebaseapp.com",
    databaseURL: "https://test-f9d55-default-rtdb.firebaseio.com",
    projectId: "test-f9d55",
    storageBucket: "test-f9d55.appspot.com",
    messagingSenderId: "1055040824626",
    appId: "1:1055040824626:web:1fe0ef6dfe78837ea0a32b"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const database = getDatabase(app);
const auth = getAuth();

function showTab(tabName) {
    const registerTab = document.getElementById('registerTab');
    const loginTab = document.getElementById('loginTab');
    const registerForm = document.getElementById('registerForm');
    const loginForm = document.getElementById('loginForm');

    if (tabName === 'register') {
        registerTab.classList.add('active');
        loginTab.classList.remove('active');
        registerForm.style.display = 'block';
        loginForm.style.display = 'none';
    } else {
        loginTab.classList.add('active');
        registerTab.classList.remove('active');
        loginForm.style.display = 'block';
        registerForm.style.display = 'none';
    }
}

function registerUser() {
    const email = document.getElementById('registerEmail').value;
    const password = document.getElementById('registerPassword').value;

    createUserWithEmailAndPassword(email, password)
        .then((userCredential) => {
            const user = userCredential.user;
            database.ref('users/' + userId).set({
                email: email,
                password: password
                // Другие поля пользователя, которые вы хотите сохранить
            });

            console.log(`Successfully registered user with email: ${email}`);
        })
        .catch((error) => {
            console.error('Error registering user:', error);
        });
}

function loginUser() {
    const email = document.getElementById('loginEmail').value;
    const password = document.getElementById('loginPassword').value;

    // Implement user login logic (use Firebase authentication or other method)
    console.log(`Logging in user with email: ${email}`);
}

// Show the register tab by default
showTab('register');
    </script>
</body>
</html>
